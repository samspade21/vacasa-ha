name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pre-commit (ruff, mypy)
        run: pre-commit run --all-files

      - name: Install test dependencies
        run: pip install pytest pytest-cov pytest-homeassistant-custom-component

      - name: Run tests
        run: pytest tests/ -v --cov=custom_components/vacasa --cov-report=xml

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  validate:
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Home Assistant
        run: |
          python -m pip install --upgrade pip
          pip install homeassistant

      - name: Validate manifest
        run: |
          python -c "
          import json
          import sys

          # Load and validate manifest.json
          with open('custom_components/vacasa/manifest.json', 'r') as f:
              manifest = json.load(f)

          # Check required fields
          required_fields = ['domain', 'name', 'documentation', 'requirements', 'codeowners', 'version']
          missing_fields = [field for field in required_fields if field not in manifest]

          if missing_fields:
              print(f'Missing required fields: {missing_fields}')
              sys.exit(1)

          # Check version format
          version = manifest['version']
          if not version or not version.count('.') >= 2:
              print(f'Invalid version format: {version}')
              sys.exit(1)

          print('Manifest validation passed')
          "

      - name: Create test Home Assistant config
        run: |
          mkdir -p test_config/custom_components
          cp -r custom_components/vacasa test_config/custom_components/
          cat > test_config/configuration.yaml << EOF
          homeassistant:
            name: Test
            latitude: 32.87336
            longitude: 117.22743
            elevation: 430
            unit_system: imperial
            time_zone: America/Los_Angeles

          logger:
            default: info
            logs:
              custom_components.vacasa: debug
          EOF

      - name: Validate Home Assistant config
        run: |
          cd test_config
          hass --script check_config --config . --info all

  hacs-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: HACS validation
        uses: hacs/action@main
        with:
          category: integration
          ignore: brands

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Run bandit security check
        run: bandit -r custom_components/vacasa/ -f json -o bandit-report.json || true

      - name: Run safety check
        run: safety check --json --output safety-report.json || true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json
